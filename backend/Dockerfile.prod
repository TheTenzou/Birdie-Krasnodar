# Bilder
FROM python:3.8.8-alpine as builder

# set directory
WORKDIR /usr/src/birdie

# set enviroment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2
RUN apk update --no-cache
RUN apk add --no-cache postgresql-dev gcc python3-dev musl-dev

# install dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/birdie/wheels -r requirements.txt

# Final
FROM python:3.8.8-alpine

# create directory for the user
RUN mkdir -p /home/birdie

# create user
RUN addgroup -S birdie && adduser -S birdie -G birdie

# create directories
ENV HOME=/home/birdie
ENV BIRDIE_HOME=/home/birdie/web
RUN mkdir ${BIRDIE_HOME}
RUN mkdir ${BIRDIE_HOME}/static
RUN mkdir ${BIRDIE_HOME}/media
WORKDIR ${BIRDIE_HOME}

# install dependencies
RUN apk update --no-cache
RUN apk add --no-cache libpq
RUN apk add --no-cache geos gdal
    
COPY --chown=birdie:birdie --from=builder /usr/src/birdie/wheels /wheels
COPY --chown=birdie:birdie --from=builder /usr/src/birdie/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY --chown=birdie:birdie ./entrypoint.prod.sh ${BIRDIE_HOME}

# copy project
COPY --chown=birdie:birdie . ${BIRDIE_HOME}

# change user
USER birdie

# run entrypoint.prod.sh
ENTRYPOINT [ "/home/birdie/web/entrypoint.prod.sh" ] 